package com.appium.tboader;

import java.net.MalformedURLException;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.By.ByXPath;
import org.openqa.selenium.remote.SessionId;
import org.openqa.selenium.support.ui.ExpectedConditions;

import io.appium.java_client.MobileElement;

public class TBoarderTest01 extends TBBaseClass {

	public static void main(String[] args) throws InterruptedException, MalformedURLException {

		System.out.println("This is main() for " + (new Object(){}.getClass().getEnclosingClass().getSimpleName()));
		
		// Call the BaseClass's setup. Later can change to Unit Test annotation
		setup();

		SessionId sessionId = driver.getSessionId();
		System.out.println(sessionId);
		Thread.sleep(1000);
		
		// find out elements
		
		// Check in first page? Click continue for the permissions
		String prechkLoc = "//android.widget.TextView[@resource-id='com.android.permissioncontroller:id/permissions_message']";
		String clickLoc = "//android.widget.Button[@text='Continue']";
		valAndClick(prechkLoc, clickLoc);
		
		
		// We need to bypass the app update reminder screen
		// API Demos .. This app was built... bla bla bla
		prechkLoc = "//android.widget.TextView[contains(@text, \"This app\")]";
		clickLoc = "//android.widget.Button[@text='OK']";
		valAndClick(prechkLoc, clickLoc);
		
		// We also need to bypass the Change Log reminder screen
		prechkLoc = "//android.widget.TextView[contains(@text, \"Change Log\")]";
		clickLoc = "//android.widget.TextView[@text='OK']";
		valAndClick(prechkLoc, clickLoc);

		System.out.println("INFO: Entering API DEMOS screen...");
		clickView("API Demos");
        clickView("Views");
        clickView("Controls");
        clickView("01. Light Theme");

	}

	/**
	 * Helper method to select and click the list view item identified by elemClick
	 * 
	 * @param elemClick String for the element's text attribute
	 */
	private static void clickView(String elemClick) {

		// MobileElement parent = driver.findElement(By.xpath("//android.widget.ListView[@resource-id='android:id/list']"));
		// MobileElement parent = driver.findElement(By.id("android:id/list"));
		MobileElement parent = driver.findElement(By.xpath("//android.widget.FrameLayout[@resource-id='android:id/content']"));
		
		List<MobileElement> lstViews = parent.findElements(By.xpath("//android.widget.TextView"));
		System.out.println("DEBUG: clickView() List Size:" + lstViews.size());
		
		for (MobileElement view : lstViews) {
			System.out.println(view.getAttribute("text"));
			// iterate until the elemClick to click
			if (view.getAttribute("text").equals(elemClick)) {
				view.click();
				break;
			}
		}	
		
		// shouldn't reach here
		System.out.println("ERROR: clickView()::Element [" + elemClick + "] not found! Not able to click.");

	}
	
	
	/**
	 * Helper method to check element in prechkLocator exists, then select and click the element of clickLocator
	 * 
	 * @param prechkLocator Xpath string for pre-check element
	 * @param clickLocator Xpath string for the element to click
	 */
	private static void valAndClick(String prechkLocator, String clickLocator) {
		
		try {
				wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(prechkLocator)));
				checkAndClick(clickLocator);
		}
		catch (TimeoutException e) {
			System.out.println("FATAL: Pre-check element not exist / Timeout!");
		}
		catch (Exception e) {
			// something else wrong?
			e.printStackTrace();
		}
		
	}
	
	private static void checkAndClick(String locValue) {
	
		List<MobileElement> lstElems = driver.findElements(By.xpath(locValue));
		
		if (lstElems.size() > 0) {
			System.out.println("Elem size: " + lstElems.size());
			lstElems.get(0).click();
		}
		else {
			System.out.println("ERROR: element [" + locValue + "] not found!");
			
		}
		
	}

}
